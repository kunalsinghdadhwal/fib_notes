definitions:
  handlers.AuthResponse:
    properties:
      message:
        example: User logged in successfully
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  handlers.ChangePasswordRequest:
    properties:
      current_password:
        example: oldpassword123
        type: string
      new_password:
        example: newpassword123
        minLength: 6
        type: string
    required:
    - current_password
    - new_password
    type: object
  handlers.CreateNoteRequest:
    properties:
      content:
        example: This is the content of my first note
        minLength: 1
        type: string
      title:
        example: My First Note
        maxLength: 255
        minLength: 1
        type: string
    required:
    - content
    - title
    type: object
  handlers.LoginRequest:
    properties:
      email:
        example: kunal@example.com
        type: string
      password:
        example: supersecurepassword
        type: string
    required:
    - email
    - password
    type: object
  handlers.NoteResponse:
    properties:
      content:
        example: This is the content of my first note
        type: string
      created_at:
        example: 1672531200
        type: integer
      id:
        example: 1
        type: integer
      title:
        example: My First Note
        type: string
      updated_at:
        example: 1672531200
        type: integer
    type: object
  handlers.NotesListResponse:
    properties:
      count:
        example: 5
        type: integer
      limit:
        example: 10
        type: integer
      notes:
        items:
          $ref: '#/definitions/handlers.NoteResponse'
        type: array
      page:
        example: 1
        type: integer
      total:
        example: 25
        type: integer
      total_pages:
        example: 3
        type: integer
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        example: kunal@example.com
        type: string
      name:
        example: Kunal Singh
        maxLength: 50
        minLength: 2
        type: string
      password:
        example: supersecurepassword
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.RegisterResponse:
    properties:
      message:
        example: User registered successfully
        type: string
      user:
        $ref: '#/definitions/models.User'
    type: object
  handlers.UpdateNoteRequest:
    properties:
      content:
        example: This is the updated content of my note
        minLength: 1
        type: string
      title:
        example: Updated Note Title
        maxLength: 255
        minLength: 1
        type: string
    required:
    - content
    - title
    type: object
  models.Note:
    properties:
      content:
        type: string
      created_at:
        type: integer
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: integer
      email:
        type: string
      id:
        type: string
      name:
        type: string
      notes:
        items:
          $ref: '#/definitions/models.Note'
        type: array
      updated_at:
        type: integer
    type: object
info:
  contact: {}
paths:
  /auth/change-password:
    put:
      consumes:
      - application/json
      description: Change the password of the currently authenticated user
      parameters:
      - description: Password change data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request data
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not authenticated or current password incorrect
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with email and password
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/handlers.AuthResponse'
        "400":
          description: Invalid request data
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid email or password
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - Authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout the current user (client-side token invalidation)
      produces:
      - application/json
      responses:
        "200":
          description: User logged out successfully
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Logout user
      tags:
      - Authentication
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get the profile information of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "401":
          description: User not authenticated
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - Authentication
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the access token using the refresh token
      produces:
      - application/json
      responses:
        "200":
          description: Token refreshed successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Invalid or expired refresh token
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh access token
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account with name, email, and password
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User registered successfully
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Invalid request data
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: User already exists
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Authentication
  /notes:
    get:
      consumes:
      - application/json
      description: Get all notes for the authenticated user with pagination and search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of notes per page
        in: query
        name: limit
        type: integer
      - description: Search term for notes title or content
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Notes retrieved successfully
          schema:
            $ref: '#/definitions/handlers.NotesListResponse'
        "401":
          description: User not authenticated
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all notes
      tags:
      - Notes
    post:
      consumes:
      - application/json
      description: Create a new note for the authenticated user
      parameters:
      - description: Note creation data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateNoteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Note created successfully
          schema:
            $ref: '#/definitions/handlers.NoteResponse'
        "400":
          description: Invalid request data
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not authenticated
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new note
      tags:
      - Notes
  /notes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific note by ID for the authenticated user
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Note deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid note ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not authenticated
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Note not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a specific note
      tags:
      - Notes
    get:
      consumes:
      - application/json
      description: Get a specific note by ID for the authenticated user
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Note retrieved successfully
          schema:
            $ref: '#/definitions/handlers.NoteResponse'
        "400":
          description: Invalid note ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not authenticated
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Note not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get a specific note
      tags:
      - Notes
    put:
      consumes:
      - application/json
      description: Update a specific note by ID for the authenticated user
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: integer
      - description: Note update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Note updated successfully
          schema:
            $ref: '#/definitions/handlers.NoteResponse'
        "400":
          description: Invalid request data or note ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not authenticated
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Note not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update a specific note
      tags:
      - Notes
swagger: "2.0"
